services:
  db:
    image: postgres
    env_file:
      - .env
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 35s
      retries: 5

  user:
    build: ./user
    env_file:
      - ./user/.env
    container_name: user_service
    ports:
      - "5000:5000"
    depends_on:
      - db
      - consul
    # deploy:
    #   replicas: 2

  payment:
    build: ./payments
    env_file:
      - ./payments/.env
    container_name: payment_service
    ports:
      - "5002:5002"
    depends_on:
      - db
      - consul
    # deploy:
    #   replicas: 2

  product:
    build: ./product
    env_file:
      - ./product/.env
    container_name: product_service
    ports:
      - "5001:5001"
    depends_on:
      - db
      - consul
    # deploy:
    #   replicas: 2

  order:
    build: ./order
    env_file:
      - ./order/.env
    container_name: order_service
    ports:
      - "5003:5003"
    depends_on:
      - db
      - consul
    # deploy:
    #   replicas: 2

  notifications:
    build: ./notifications
    env_file:
      - ./notifications/.env
    container_name: notifications_service
    ports:
      - "5004:5004"
    depends_on:
      - db
      - consul
    # deploy:
    #   replicas: 2

  cart:
    build: ./cart
    env_file:
      - ./cart/.env
    container_name: cart_service
    ports:
      - "5005:5005"
    depends_on:
      - db
      - consul
    # deploy:
    #   replicas: 2

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user
      - product
      - payment
      - cart
      - order
      - notifications

  consul:
    image: hashicorp/consul:1.15.4
    container_name: consul
    ports:
      - "8500:8500"
    command: "agent -dev -client=0.0.0.0"
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  postgres_data:
