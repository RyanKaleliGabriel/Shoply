services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 35s
      retries: 5

  # user:
  #   build: ./user
  #   container_name: user_service
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_PORT: ${POSTGRES_PORT}
  #     POSTGRES_HOST: db
  #     SERVICE_USER: ${SERVICE_USER}
  #     PORT_USER: ${PORT_USER}
  #     NODE_ENV: ${NODE_ENV}
  #     JWT_SECRET: ${JWT_SECRET}
  #     JWT_COOKIE_EXPIRES_IN: ${JWT_COOKIE_EXPIRES_IN}
  #     JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
  #     GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
  #     GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
  #     GOOGLE_OAUTH_URL : ${GOOGLE_OAUTH_URL}
  #     GOOGLE_ACCESS_TOKEN_URL: ${GOOGLE_ACCESS_TOKEN_URL}
  #     GOOGLE_TOKEN_INFO_URL: ${GOOGLE_TOKEN_INFO_URL}

  #   depends_on:
  #     - db

  # payment:
  #   build: ./payment
  #   container_name: payment_service
  #   ports:
  #     - "5002:5002"
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     SERVICE_PAYMENT: ${SERVICE_PAYMENT}
  #     PORT_PAYMENT: ${PORT_PAYMENT}
  #     NODE_ENV: ${NODE_ENV}
  #   depends_on:
  #     - db

  product:
    build: ./product
    container_name: product_service
    ports:
      - "5001:5001"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: db
      SERVICE_PRODUCT: ${SERVICE_PRODUCT}
      PORT_PRODUCT: ${PORT_PRODUCT}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - db

  # order:
  #   build: ./order
  #   container_name: order_service
  #   ports:
  #     - "5003:5003"
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     SERVICE_ORDER: ${SERVICE_ORDER}
  #     PORT_ORDER: ${PORT_ORDER}
  #     NODE_ENV: ${NODE_ENV}
  #   depends_on:
  #     - db

  # notifications:
  #   build: ./notifications
  #   container_name: notifications_service
  #   ports:
  #     - "5004:5004"
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     SERVICE_NOTIFICATION: ${SERVICE_NOTIFICATION}
  #     PORT_NOTIFICATION: ${PORT_NOTIFICATION}
  #     NODE_ENV: ${NODE_ENV}
  #   depends_on:
  #     - db

  # cart:
  #   build: ./cart
  #   container_name: cart_service
  #   ports:
  #     - "5005:5005"
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     SERVICE_CART: ${SERVICE_CART}
  #     PORT_CART: ${PORT_CART}
  #     NODE_ENV: ${NODE_ENV}
  #   depends_on:
  #     - db

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      # - user
      - product
      # - payment
      # - cart
      # - order
      # - notifications

volumes:
  postgres_data:
